// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealWorldAPI.DataAccess;

namespace RealWorldAPI.Migrations
{
    [DbContext(typeof(FishingDbContext))]
    partial class FishingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RealWorldAPI.Models.Fishing.Catch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FishingId")
                        .HasColumnType("int");

                    b.Property<int>("TackleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FishingId");

                    b.HasIndex("TackleId");

                    b.ToTable("Catch");
                });

            modelBuilder.Entity("RealWorldAPI.Models.Fishing.Fishing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCatch")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLiked")
                        .HasColumnType("bit");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fishing");
                });

            modelBuilder.Entity("RealWorldAPI.Models.Fishing.Lure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lure");
                });

            modelBuilder.Entity("RealWorldAPI.Models.Fishing.Tackle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LureId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LureId");

                    b.ToTable("Tackle");
                });

            modelBuilder.Entity("RealWorldAPI.Models.Fishing.Catch", b =>
                {
                    b.HasOne("RealWorldAPI.Models.Fishing.Fishing", null)
                        .WithMany("Catch")
                        .HasForeignKey("FishingId");

                    b.HasOne("RealWorldAPI.Models.Fishing.Tackle", "Tackle")
                        .WithMany()
                        .HasForeignKey("TackleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealWorldAPI.Models.Fishing.Tackle", b =>
                {
                    b.HasOne("RealWorldAPI.Models.Fishing.Lure", "Lure")
                        .WithMany()
                        .HasForeignKey("LureId");
                });
#pragma warning restore 612, 618
        }
    }
}
